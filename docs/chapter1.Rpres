```{r, include = F}
knitr::opts_chunk$set(echo = F)
```

Regression and model validation
========================================================
type: sub-section

Tuomo Nieminen

========================================================
type: prompt
incremental: false

Linear regression
```{r}
library(ggplot2); library(ggExtra)

# load data
learning2014 <-  read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/learning2014.txt", sep = "\t", header = TRUE)
df <- learning2014[,c("attitude","points")]
df <- df[df$points > 0,]

# increase font size for plot
theme_set(theme_grey(base_size = 18))

# define what to plot
p <- ggplot(df,aes(attitude,points))
# define plot type
p <- p + geom_point()

# add regression line
lm_fit <- lm(points~attitude, data = df)
lm_params <- lm_fit$coefficients
p <- p +  geom_abline(intercept=lm_params[1], 
                      slope = lm_params[2],
                      colour="red")
p

```

***

Model validation
```{r}
qqnorm(lm_fit$residuals, col = "blue")
qqline(lm_fit$residuals)
```

What is a statistical model?
========================================================

A statistical model: 
- Embodies a set of assumptions and describes the generation of a sample from a population
- The model represents the data generating process
- The uncertainty related to a sample of data is described using probability distributions

<!-- source: [wikipedia](https://en.wikipedia.org/wiki/Statistical_model) -->

Linear regression models
========================================================

Linear regression is an approach for modeling the relationship between a dependent variable $\mathbf{y}$ and one or more explanatory variables $\mathbf{X}$.  

There are many applications for linear models such as

- Prediction or forecasting
- Quantifying the strength of the relationship between $\mathbf{y}$ and $\mathbf{x}$


Assumptions of linear regression models
========================================================

In linear regression, it is assumed that the relationship between $\mathbf{y}$ and  $\mathbf{X}$ is *linear*:

$$\mathbf{y} = \alpha + \mathbf{\beta} \cdot \mathbf{X} + \mathbf{\epsilon}$$

- The goal is to estimate the unkown parameters $\alpha$ and $\mathbf{\beta}$
- An unobservable random variable ($\mathbf{\epsilon}$) is assumed to add noise to the observations
- Often it is reasonable to assume $\mathbf{\epsilon} \sim N(0, \sigma^2)$

<!-- source: [wikipedia](https://en.wikipedia.org/wiki/Linear_regression) -->


Simple regression
========================================================

In a simple case, there is only one explanatory variable $\mathbf{x}$

$\mathbf{y} =  \alpha + \beta \cdot \mathbf{x} + \mathbf{\epsilon}$

R:  
```lm(y ~ x)```  

***
```{r}
library(ggplot2)
x <- rnorm(100)
y <- 1.5*x + rnorm(100)
qplot(x, y) + geom_smooth(method = "lm", se = F) + theme(
  axis.ticks = element_blank(), 
  axis.text = element_blank())
```



Multiple regression (1)
========================================================

The model can also include more than one explanatory variable

$$\mathbf{y} = \alpha + \beta_1 \cdot \mathbf{x}_1 + \beta_2 \cdot \mathbf{x}_2 + \mathbf{\epsilon}$$

R:  
```lm(y ~ x1 + x2)```  

***
```{r}
library(scatterplot3d)
set.seed(666)
x1 <- rnorm(100)
x2 <- rnorm(100)
y <- 2*x1 + -1*x2 + rnorm(100, sd = 2)
mycol <- rgb(t(col2rgb("blue")), alpha = 150, maxColorValue = 255)
p <- scatterplot3d(x = x1, y = x2, z = y, grid = T, box = F, mar = c(3,3,3,3), tick.marks = F, angle = 20,pch = 16, color = mycol)
p$plane3d(lm(y~x1+x2))
```


Multiple regression (2)
========================================================

In the general case, there can be any number of explanatory variables

$$\mathbf{y} = \alpha + \beta_1 \cdot \mathbf{x}_1 + \beta_2 \cdot \mathbf{x}_2 + ... + \beta_d \cdot \mathbf{x}_d + \mathbf{\epsilon}$$

In matrix notation  

$$\mathbf{y} = \alpha + \mathbf{\beta} \cdot \mathbf{X} + \mathbf{\epsilon}$$

R:  
```lm(y ~ x1 + x2 + ... + xd)```  

Polynomial terms
========================================================

It is also possible to add polynomial terms, if the effect of a variable is non-linear

$$\mathbf{y} = \alpha + \beta_1 \cdot \mathbf{x} + \beta_2 \cdot \mathbf{x}^2 + \mathbf{\epsilon}$$

R:  
```lm(y ~ x + I(x^2))```  

***

```{r}
x <- rnorm(100)
x2 <- x^2
y <- 1.5*x + -1*x2 + rnorm(100)
qplot(x, y) + geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F) + theme(
  axis.ticks = element_blank(), 
  axis.text = element_blank())
```


Interaction terms
========================================================
 Finally, it is also possible to add interaction terms, if the explanatory variables can affect each other
 
 $$\mathbf{y} = \alpha + \beta_1 \cdot \mathbf{x}_1 + \beta_2 \cdot \mathbf{x}_2 + \beta_3 \cdot \mathbf{x}_1 \cdot \mathbf{x}_2 + \mathbf{\epsilon}$$
 
R:  
```lm(y ~ x1 + x2 + I(x1*x2))```  
