# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- as.data.frame(scale(Boston))
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
boston$cluster <- km$cluster
lda.fit <- lda(km$cluster~., data = boston)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
browseURL("http://hdr.undp.org/sites/default/files/hdr2015_technical_notes.pdf")
names(gi)
head(gi)
names(gi)
?write
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Maternal.Mortality",
"Adolescent.Birth", "Percent.Parliament.F", "Edu2.Female", "Edu2.Male",
"Labour.Female", "Labour.Male")
gii <- mutate(gii, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
human <- inner_join(hd, gii, by = "Country")
gi <- mutate(gi, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
human <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human, sep =",", row.names = F)
human1 <- read.table("human1.txt", sep  =",", header = T)
str(human1)
human1$GNI <- gsub(",","",hd$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
rm(list = ls())
human1 <- read.table("human1.txt", sep  =",", header = T)
human1$GNI <- gsub(",","",hd$GNI) %>% as.numeric
human1$GNI <- gsub(",","",human1$GNI) %>% as.numeric
df <- iris
rownames(iris)
iris[-"1",]
# The Human Development Index (HDI) is a summary measure of achievements
# in key dimensions of human development
# data from kaggle: https://www.kaggle.com/undp/human-development
# Tuomo Nieminen 2017
# meta
# ----
# kaggle
browseURL("https://www.kaggle.com/undp/human-development")
# HDI web page technical notes pdf
browseURL("http://hdr.undp.org/sites/default/files/hdr2015_technical_notes.pdf")
# libraries
library(dplyr)
# data wrangling part 1
# ---------------------
# read human develop and gender inequality data
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# rename variables
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Maternal.Mortality",
"Adolescent.Birth", "Percent.Parliament.F", "Edu2.Female", "Edu2.Male",
"Labour.Female", "Labour.Male")
# do a bit of feature engineering
gi <- mutate(gi, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
# join data and write to file
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
# data wrangling part 2
# --------------------
# access dplyr
library(dplyr)
# read data
human <- read.table("human1.txt", sep  =",", header = T)
# deal with comma  separator for thousand (GNI variable)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
# exclude unneeded variables
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
# remove rows with NA values
human <- filter(human, complete.cases(human))
# add countries as rownames
rownames(human) <- human$Country
# remove 'World' observation (which is the last row)
human <- human[-nrow(human1), ]
# remove the Country variable
human <- select(human, -Country)
write.table(file = "human2.txt", human, row.names = F)
# The Human Development Index (HDI) is a summary measure of achievements
# in key dimensions of human development
# data from kaggle: https://www.kaggle.com/undp/human-development
# Tuomo Nieminen 2017
# meta
# ----
# # kaggle
# browseURL("https://www.kaggle.com/undp/human-development")
#
# # HDI web page technical notes pdf
# browseURL("http://hdr.undp.org/sites/default/files/hdr2015_technical_notes.pdf")
# libraries
library(dplyr)
# data wrangling part 1
# ---------------------
# read human develop and gender inequality data
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# rename variables
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Maternal.Mortality",
"Adolescent.Birth", "Percent.Parliament.F", "Edu2.Female", "Edu2.Male",
"Labour.Female", "Labour.Male")
# do a bit of feature engineering
gi <- mutate(gi, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
# join data and write to file
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
# data wrangling part 2
# --------------------
# access dplyr
library(dplyr)
# read data
human <- read.table("human1.txt", sep  =",", header = T)
# deal with comma  separator for thousand (GNI variable)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
# exclude unneeded variables
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
# remove rows with NA values
human <- filter(human, complete.cases(human))
# add countries as rownames
rownames(human) <- human$Country
# remove 'World' observation (which is the last row)
human <- human[-nrow(human1), ]
# remove the Country variable
human <- select(human, -Country)
write.table(file = "human2.txt", human, row.names = F)
# The Human Development Index (HDI) is a summary measure of achievements
# in key dimensions of human development
# data from kaggle: https://www.kaggle.com/undp/human-development
# Tuomo Nieminen 2017
# meta
# ----
# # kaggle
# browseURL("https://www.kaggle.com/undp/human-development")
#
# # HDI web page technical notes pdf
# browseURL("http://hdr.undp.org/sites/default/files/hdr2015_technical_notes.pdf")
# libraries
library(dplyr)
# data wrangling part 1
# ---------------------
# read human develop and gender inequality data
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# rename variables
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Maternal.Mortality",
"Adolescent.Birth", "Percent.Parliament.F", "Edu2.Female", "Edu2.Male",
"Labour.Female", "Labour.Male")
# do a bit of feature engineering
gi <- mutate(gi, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
# join data and write to file
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
# data wrangling part 2
# --------------------
# access dplyr
library(dplyr)
# read data
human <- read.table("human1.txt", sep  =",", header = T)
# deal with comma  separator for thousand (GNI variable)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
# exclude unneeded variables
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
# remove rows with NA values
human <- filter(human, complete.cases(human))
# add countries as rownames
rownames(human) <- human$Country
# remove 'World' observation (which is the last row)
human <- human[-nrow(human), ]
# remove the Country variable
human <- select(human, -Country)
write.table(file = "human2.txt", human, row.names = F)
rm(list = ls())
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Expectancy", "Edu.Expected", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Maternal.Mortality",
"Adolescent.Birth", "Percent.Parliament.F", "Edu2.Female", "Edu2.Male",
"Labour.Female", "Labour.Male")
gi <- mutate(gi, Edu2.FM = Edu2.Female / Edu2.Male, Labour.FM = Labour.Female / Labour.Male)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
str(human)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
?one_of
keep
?select
rm(list = ls())
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament")
human <- select(human, one_of(keep))
human <- dplyr::select(human, one_of(keep))
str(human)
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
sum(is.na(human))
human
summary(human)
human <- read.table("human1.txt", sep  =",", header = T)
dim(human)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
nrow(human)
tail(human)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n <- nrow(human)
world <- human[n,]
human <- human[-n, ]
human <- select(human, -Country)
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, row.names = F)
str(read.table("human2.txt"), sep = ",", header = T))
str(read.table("human2.txt"), sep = ",", header = T)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
str(human)
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
str(human)
n <- nrow(human)
world <- human[n,]
human <- human[-n, ]
str(human)
human <- dplyr::select(human, -Country)
str(human)
write.table(file = "human2.txt", human, row.names = F)
write.table(file = "human2.txt", human, sep = ",", row.names = F)
read.table("human2.txt", sep = ",", header = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
str(human)
dim(human)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
dim(human)
head(human)
tail(human)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n <- nrow(human)
world <- human[n,]
human <- human[-n, ]
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
head(human)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
library(ggfortify)
library(dplyr)
pc <- prcomp(iris[-5])
vars <- pc$sdev**2
varcap <- (100*vars / (sum(vars))) %>% round(2)
lab <- paste0(colnames(pc$rotation), " (", varcap, "%)")
autoplot(pc, loadings = T, data = iris, col = "Species",
loadings.label = T, loadings.label.vjust = 1.5, xlab = lab[1], ylab = lab[2],
main = "A biplot of iris's 2 principal components") + mytheme()
library(ggfortify)
library(dplyr)
pc <- prcomp(iris[-5])
vars <- pc$sdev**2
varcap <- (100*vars / (sum(vars))) %>% round(2)
lab <- paste0(colnames(pc$rotation), " (", varcap, "%)")
autoplot(pc, loadings = T, data = iris, col = "Species",
loadings.label = T, loadings.label.vjust = 1.5, xlab = lab[1], ylab = lab[2],
main = "A biplot of iris's 2 principal components")
par(mar = c(4,4,3,1))
pca <- prcomp(X, retx = F, center = T, scale = T)
newdata <- X %*% pca$rotation
eigenv <- pca$sdev**2
var_explained <- paste0("(",round(100*(eigenv/sum(eigenv)), 1),"%)")
colnames(newdata) <- paste(colnames(newdata), var_explained)
plot(newdata[,1:2], ylim = c(-5, 5),
bty = "n",
cex = 2.0, pch = 20, col = col + 1)
set.seed(333)
x <- rep(c(1,2,5), times = 50)
col <- x
x <- jitter(x, factor = 2)
X <- matrix(c(x, x + rnorm(length(x)), x + rnorm(length(x))), ncol = 3)
par(mar = c(4,4,3,1))
pca <- prcomp(X, retx = F, center = T, scale = T)
newdata <- X %*% pca$rotation
eigenv <- pca$sdev**2
var_explained <- paste0("(",round(100*(eigenv/sum(eigenv)), 1),"%)")
colnames(newdata) <- paste(colnames(newdata), var_explained)
plot(newdata[,1:2], ylim = c(-5, 5),
bty = "n",
cex = 2.0, pch = 20, col = col + 1)
?ggbiplot
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
gsub(",","",human$GNI)
?gsub
summary(human$GNI)
human$GNI <- gsub(",", "", human$GNI) %>% as.numeric
summary(human$GNI)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
str(human)
summary(human)
str(human$GNI)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
library(GGally)
ggpairs(human)
pairs(human)
ggpairs(human)
World
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
rownames(human) <- human$Country
n <- nrow(human)
tail(human)
tail(human, 10)
rownames(human)
tail(human)
tail(human, 10)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Expected", "GNI", "Maternal.Mortality", "Percent.Parliament.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
str(human)
tail(human)
tail(human, 10)
n_until <- nrow(human) - 7
human <- human[1:n_until, ]
tail(human)
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
