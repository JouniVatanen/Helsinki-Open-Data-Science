indicators <- read.csv("indicators.csv", na.string = "..")
str(indicators)
counts <- indicators %>%
group_by(IndicatorCode, IndicatorName) %>%
summarise(NumCountries = n_distinct(CountryName),
NumYears     = n_distinct(Year),
FirstYear    = min(Year),
LastYear     = max(Year))
names(indicators)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "2010", "2011" ,"2012")
?gather
?spread
str(indicators)
test <- gather(indicators, key = "year", value ="value", 2010, 2011, 2012)
library(tidyr)
test <- gather(indicators, key = "year", value ="value", 2010, 2011, 2012)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "val_2010", "val_2011" ,"val_2012")
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "val2010", "val2011" ,"val2012")
test <- gather(indicators, key = "year", value ="value", val2010, val2011, val2012)
str(test)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "2010", "2011" ,"2012")
test <- gather(indicators, key = "year", value ="value", "2010", "2011", "2012")
test <- gather(indicators, key = "year", value ="value", `2010`, `2011`, `2012``)
test <- gather(indicators, key = "year", value ="value", `2010`, `2011`, `2012`)
test <- gather(indicators, key = "year", value ="value", `2010`, `2011`, `2012`)
str(test)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
test <- gather(indicators, key = "year", value ="value", v2010, v2011, v2012)
str(test)
indicators <- gather(indicators, key = "year", value ="value", v2010, v2011, v2012)
substr("2012a", 1,4)
indicators$year <- substr(indicators$year, 1, 4) %>% as.interger
indicators$year <- substr(indicators$year, 1, 4) %>% as.integer
summary(indicators$year)
indicators <- read.csv("indicators.csv", na.string = "..")
names(indicators)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
Indicators <- gather(indicators, key = "year", value ="value", v2010, v2011, v2012)
summary(Indicators)
indicators$year %>% factor %>% summary
indicators$year %>% as.factor %>% summary
Indicators$year %>% factor %>% summary
indicators$year <- substr(indicators$year, 2, 5) %>% as.integer
Indicators$year <- substr(Indicators$year, 2, 5) %>% as.integer
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(NumCountries = n_distinct(country_name),
NumYears     = n_distinct(year),
FirstYear    = min(year),
LastYear     = max(year))
counts$IndicatorName <- gsub("\\$", "dollar", counts$IndicatorName)
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(NumCountries = n_distinct(country),
NumYears     = n_distinct(year),
FirstYear    = min(year),
LastYear     = max(year))
counts
counts
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
str(counts)
keep <- filter(counts, n_counries > 200)$indicator_code
keep <- filter(counts, n_countries > 200)$indicator_code
keep
str(keep)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
Indicators <- gather(indicators, key = "year", value ="value", v2010, v2011, v2012)
Indicators$year <- substr(Indicators$year, 2, 5) %>% as.integer
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep <- filter(counts, n_countries > 200)$indicator_code
keep
str(keep)
?spread
Indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
Indicators$year <- substr(Indicators$year, 2, 5) %>% as.integer
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep <- filter(counts, n_countries > 200)$indicator_code
Indicators <- spread(Indicators, key = indicator_value, value = indicator_value)
keep_codes <- filter(counts, n_countries > 200)$indicator_code
Indicators <- filter(Indicators, indicator_code %in% keep_codes)
keep_indicators <- filter(counts, n_countries > 200)$indicator_name
Indicators <- select(Indicators, -indicator_code)
indicators_wide <- spread(Indicators, key = indicator_name, value = indicator_value)
str(indicators_wide)
dim(indicators_wide)
indicators_wide <- spread(Indicators, key = indicator_code, value = indicator_value)
Indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
Indicators$year <- substr(Indicators$year, 2, 5) %>% as.integer
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 200)$indicator_code
Indicators <- filter(Indicators, indicator_code %in% keep_indicators)
indicators_wide <- spread(Indicators, key = indicator_code, value = indicator_value)
keep_indicators <- filter(counts, n_countries > 220)$indicator_code
Indicators <- filter(Indicators, indicator_code %in% keep_indicators)
complete.cases(Indicators) %>% sum
nrow(Indicators)
indicators_ <- filter(Indicators, indicator_code %in% keep_indicators)
indicators_ <- filter(indicators_, complete.cases(Indicators))
indicators_ <- filter(Indicators, indicator_code %in% keep_indicators)
indicators_ <- filter(indicators_, complete.cases(Indicators))
indicators_wide <- spread(indicators_, key = indicator_code, value = indicator_value)
rm(list = ls())
library(dplyr)
library(tidyr)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
Indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
Indicators$year <- substr(Indicators$year, 2, 5) %>% as.integer
counts <- Indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_code
indicators_ <- filter(Indicators, indicator_code %in% keep_indicators)
indicators_ <- filter(indicators_, complete.cases(Indicators))
indicators_ <- filter(indicators_, complete.cases(indicators_))
str(indicators_)
indicators_wide <- spread(indicators_, key = indicator_code, value = indicator_value)
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators$year <- substr(indicators$year, 2, 5) %>% as.integer
rm(list = ls())
library(dplyr)
library(tidyr)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators$year <- substr(indicators$year, 2, 5) %>% as.integer
counts <- indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_code
indicators <- filter(Indicators, indicator_code %in% keep_indicators)
indicators <- filter(indicators, indicator_code %in% keep_indicators)
indicators <- filter(indicators, complete.cases(indicators))
str(indicators)
indicators_wide <- spread(indicators, key = indicator_code, value = indicator_value)
indicators$year %>% factor() %>% summary
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators$year <- substr(indicators$year, 2, 5) %>% as.integer
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators$year <- substr(indicators$year, 2, 5) %>% as.integer
?unique
indicators <- select(indicators, -year) %>% unique
counts <- indicators %>%
group_by(indicator_code, indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_code
str(indicators)
indicators <- filter(indicators, indicator_code %in% keep_indicators)
str(indicators)
indicators <- filter(indicators, complete.cases(indicators))
str(indicators)
indicators_wide <- spread(indicators, key = indicator_code, value = indicator_value)
?spread
summary(indicators)
indicators <- select(indicators, -country_code, -indicator_code)
str(indicators)
indicators_wide <- spread(indicators, key = indicator_name, value = indicator_value)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- select(indicators, -country_code, -indicator_code)
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators <- select(indicators, -year) %>% unique
str(indicators)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
str(indicators)
indicators <- filter(indicators, complete.cases(indicators))
str(indicators)
indicators_wide <- spread(indicators, key = indicator_name, value = indicator_value)
indicators$row_id <- 1:nrow(indicators)
indicators_wide <- spread(indicators, key = indicator_name, value = indicator_value)
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
keep_indicators <- sample(keep_indicators, 100, replace = F)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
indicators <- filter(indicators, complete.cases(indicators))
str(indicators)
indicators_wide <- spread(indicators, key = indicator_name, value = indicator_value)
str(indicators_wide)
str(indicators)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
rm(list= ls())
library(dplyr)
library(tidyr)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(indicators)
names(indicators) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- select(indicators, -country_code, -indicator_code)
indicators <- gather(indicators, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators <- select(indicators, -year) %>% unique
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
keep_indicators <- sample(keep_indicators, 100, replace = F)
keep_indicators
str(indicators)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
indicators <- filter(indicators, complete.cases(indicators))
str(indicators)
summmary(indicators)
summary(indicators)
indicators <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
data <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
names(data)
names(data) <- c("country", "country_code", "indicator_name", "indicator_code", "v2010", "v2011" ,"v2012")
indicators <- select(data, -country_code, -indicator_code)
data <- select(data, -country_code, -indicator_code)
indicators <- gather(data, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators <- select(indicators, -year) %>% unique
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country))
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
keep_indicators <- sample(keep_indicators, 100, replace = F)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
indicators_wide <- spread(indicators, key = indicator_name, value = indicator_value)
str(indicators)
indicators <- gather(data, key = "year", value ="indicator_value", v2010, v2011, v2012)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country))
count()
counts
hist(counts$n_countries)
summary(counts$n_countries)
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
?sample
keep_indicators <- filter(counts, n_countries > 220)$indicator_name %>% sample(100)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
indicators <- select(indicators, -year) %>% unique
str(indicators)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country),
na = sum(is.na(indicator_value)))
counts
summary(counts)
keep_indicators <- filter(counts, na < mean(na), n_countries > 220)$indicator_name %>% sample(100)
mean(na)
keep_indicators <- filter(counts, na < 150, n_countries > 220)$indicator_name
length(keep_indicators)
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
length(keep_indicators)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country),
na = sum(is.na(indicator_value)))
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
length(keep_indicators)
indicators <- gather(data, key = "year", value ="indicator_value", v2010, v2011, v2012)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country),
na = sum(is.na(indicator_value)))
keep_indicators <- filter(counts, n_countries > 220)$indicator_name
length(keep_indicators)
summary(counts)
summary(counts)
indicators <- filter(indicators, na < mean(na), indicator_name %in% keep_indicators)
indicators <- filter(indicators, na < mean(counts$na), indicator_name %in% keep_indicators)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country),
na = sum(is.na(indicator_value)))
summary(counts)
keep_indicators <- filter(counts, na < mean(na), n_countries > 220)$indicator_name
keep_indicators <- filter(counts, na < mean(na), n_countries > 220)$indicator_name %>% sample(100)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
keep_indicators <- filter(counts, na < 500, n_countries > 220)$indicator_name %>% sample(100)
indicators <- gather(data, key = "year", value ="indicator_value", v2010, v2011, v2012)
indicators <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators)
indicators <- select(indicators, -year) %>% unique
indicators <- gather(data, key = "year", value ="indicator_value", v2010, v2011, v2012)
counts <- indicators %>%
group_by(indicator_name) %>%
summarise(n_countries = n_distinct(country),
na = sum(is.na(indicator_value)))
summary(counts)
keep_indicators <- filter(counts, na < 500, n_countries > 220)$indicator_name %>% sample(100)
indicators_ <- filter(indicators, indicator_name %in% keep_indicators)
str(indicators_)
indicators_ <- select(indicators_, -year) %>% unique
str(indicators_)
indicators_wide <- spread(indicators_, key = indicator_name, value = indicator_value)
indicators_ %>% complete.cases %>% sum
nrow(indicators_)
indicators_ <- select(indicators_, complete.cases)
indicators_ <- filter(indicators_, complete.cases(indicators))
indicators_ <- filter(indicators_, complete.cases(indicators_))
str(indicators)
str(indicators_)
indicators_wide <- spread(indicators_, key = indicator_name, value = indicator_value)
indicators_ <- indicators_ %>% unique
str(indicators_)
indicators_wide <- spread(indicators_, key = indicator_name, value = indicator_value)
indicators_$row <- 1:nrow(indicators_)
indicators_wide <- spread(indicators_, key = indicator_name, value = indicator_value)
str(indicators_wide)
summary(indicators_wide
)
library(dplyr)
library(tidyr)
data <- read.csv("indicators.csv", na.string = "..", stringsAsFactors = F)
hd <- read.csv("human_development.csv", stringsAsFactors = F)
names(hd) <- c("hdi_rank", "country", "hdi", "life_exp", "edu_exp", "edu_mean", "GNI", "gni_minus_rank")
hd$GNI <- gsub(",","",hd$GNI) %>% as.numeric
hd <- select(hd, -hdi_rank, - hdi, -gni_minus_rank)
gii <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(gii)
names(gii) <- c("gii_rank", "country", "gii", "mm_ratio",
"adolesc_br", "prc_parl", "edu2_f", "edu2_m",
"labour_f", "labour_m")
str(gii)
gii_ <- select(gii, -gii_rank, -gii)
human <- inner_join(hd, gii_, by = "country")
human <- slice(human, -nrow(human))
human <- filter(human, complete.cases(human))
rownames(human) <- human$country
human <- select(human, -country)
human <- scale(human)
pc <- prcomp(human)
library(ggfortify)
autoplot(pc, data = human, label = T, loadings = T, loadings.label  = T)
str(human)
human <- inner_join(hd, gii_, by = "country")
human <- inner_join(hd, gii_, by = "country")
autoplot.prcomp
autoplot.princomp
library(ggfortify)
autoplot.princomp
?autoplot.princomp
autoplot(pc, data = human, loadings =T, loadings.label  = T)
human_ <- scale(human)
human <- inner_join(hd, gii_, by = "country")
human <- slice(human, -nrow(human))
human <- filter(human, complete.cases(human))
rownames(human) <- human$country
human <- select(human, -country)
human_ <- scale(human)
pc <- prcomp(human_)
library(ggfortify)
autoplot(pc, data = human_, loadings =T, loadings.label  = T)
gii <- mutate(gii, edu2_ratio = edu2_f / edu2_m, labour_ratio = labour_f / labour_m)
gii <- mutate(gii, edu2_ratio = edu2_f / edu2_m, labour_ratio = labour_f / labour_m)
gii_ <- select(gii, -gii_rank, -gii, -edu2_f, -edu2_m, -labour_f, -labour_m)
human <- inner_join(hd, gii_, by = "country")
human <- slice(human, -nrow(human))
human <- filter(human, complete.cases(human))
rownames(human) <- human$country
human <- select(human, -country)
library(GGally)
ggpairs(human)
human_ <- scale(human)
pc <- prcomp(human_)
library(ggfortify)
autoplot(pc, data = human_, loadings =T, loadings.label  = T)
autoplot(pc, data = human_, labels = T, loadings =T, loadings.label  = T)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T)
?ggbiplot
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, size = 2)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, size = 0.1)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 0.1)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 0.4)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 1)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, size = 0)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, linetype = NULL)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, linetype = NA)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, size = 0)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, linetype = "blank")
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, linetype = 0)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, size = 0 )
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, size = 0, loadings.label.size = 3)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 3, size = 0, loadings.label.size = 6)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2, size = 0, loadings.label.size = 5)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 5)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 6)
autoplot(pc, data = human_, label = F, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 6)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 6)
tail(human)
human <- inner_join(hd, gii_, by = "country")
tail(human)
human_ <- slice(human, -nrow(human))
human_ <- filter(human_, complete.cases(human_))
rownames(human) <- human$country
human <- select(human, -country)
human_ <- scale(human)
pc <- prcomp(human_)
# The Human Development Index (HDI) is a summary measure of achievements
# in key dimensions of human development
# data from kaggle: https://www.kaggle.com/undp/human-development
# Tuomo Nieminen 2017
# meta
# browseURL("https://www.kaggle.com/undp/human-development")
# libraries
library(dplyr)
# read human develop data
hd <- read.csv("human_development.csv", stringsAsFactors = F)
# rename variables
names(hd) <- c("hdi_rank", "country", "hdi", "life_exp", "edu_exp", "edu_mean", "GNI", "gni_minus_rank")
# deal with comma 1000 separator
hd$GNI <- gsub(",","",hd$GNI) %>% as.numeric
hd <- select(hd, -hdi_rank, - hdi, -gni_minus_rank)
# read gender inequality data
gii <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(gii)
# rename variables
names(gii) <- c("gii_rank", "country", "gii", "mm_ratio",
"adolesc_br", "prc_parl", "edu2_f", "edu2_m",
"labour_f", "labour_m")
str(gii)
gii <- mutate(gii, edu2_ratio = edu2_f / edu2_m, labour_ratio = labour_f / labour_m)
gii_ <- select(gii, -gii_rank, -gii, -edu2_f, -edu2_m, -labour_f, -labour_m)
# join data
human1 <- inner_join(hd, gii_, by = "country")
tail(human1)
# remove 'World' observation
human2 <- slice(human1, -nrow(human1))
# remove rows with NA values
human3 <- filter(human2, complete.cases(human2))
# add rownames as countries and remove country variable
rownames(human3) <- human3$country
human <- select(human3, -country)
library(GGally)
# ggpairs(human)
# pca
#---
# center
human_ <- scale(human)
# pca
pc <- prcomp(human_)
# plot
library(ggfortify)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 6)
rm(list=ls())
# The Human Development Index (HDI) is a summary measure of achievements
# in key dimensions of human development
# data from kaggle: https://www.kaggle.com/undp/human-development
# Tuomo Nieminen 2017
# meta
# browseURL("https://www.kaggle.com/undp/human-development")
# libraries
library(dplyr)
# read human develop data
hd <- read.csv("human_development.csv", stringsAsFactors = F)
# rename variables
names(hd) <- c("hdi_rank", "country", "hdi", "life_exp", "edu_exp", "edu_mean", "GNI", "gni_minus_rank")
# deal with comma 1000 separator
hd$GNI <- gsub(",","",hd$GNI) %>% as.numeric
hd <- select(hd, -hdi_rank, - hdi, -gni_minus_rank)
# read gender inequality data
gii <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(gii)
# rename variables
names(gii) <- c("gii_rank", "country", "gii", "mm_ratio",
"adolesc_br", "prc_parl", "edu2_f", "edu2_m",
"labour_f", "labour_m")
str(gii)
gii <- mutate(gii, edu2_ratio = edu2_f / edu2_m, labour_ratio = labour_f / labour_m)
gii_ <- select(gii, -gii_rank, -gii, -edu2_f, -edu2_m, -labour_f, -labour_m)
# join data
human1 <- inner_join(hd, gii_, by = "country")
tail(human1)
# remove 'World' observation
human2 <- slice(human1, -nrow(human1))
# remove rows with NA values
human3 <- filter(human2, complete.cases(human2))
# add rownames as countries and remove country variable
rownames(human3) <- human3$country
human <- select(human3, -country)
library(GGally)
# ggpairs(human)
# pca
#---
# center
human_ <- scale(human)
# pca
pc <- prcomp(human_)
# plot
library(ggfortify)
autoplot(pc, data = human_, label = T, loadings =T, loadings.label  = T, label.size = 2.5, size = 0, loadings.label.size = 6)
str(gii)
head(gii)
browseURL("https://www.kaggle.com/undp/human-development")
gii <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(gii)
browseURL("https://www.kaggle.com/undp/human-development")
