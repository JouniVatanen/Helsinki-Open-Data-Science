plot(res.mca,invisible=c("ind","quali.sup","quanti.sup"),cex=0.8)
plot(res.mca,invisible=c("quali.sup","quanti.sup"),cex=0.8)
dimdesc(res.mca)
plotellipses(res.mca,keepvar=1:4)
plotellipses(res.mca,keepvar="Tea")
data(tea)
View(tea)
tea[,19]
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
summary(res.mca)
plot(res.mca,invisible=c("var","quali.sup","quanti.sup"),cex=0.7)
plot(res.mca,invisible=c("ind","quali.sup","quanti.sup"),cex=0.8)
data(package = "FactoMineR")
data(hobbies)
res.mca <- MCA(hobbies,quali.sup=19:22,quanti.sup=23)
res.mca <- MCA(hobbies,quali.sup=19:22,quanti.sup=23)
plot(res.mca,invisible=c("var","quali.sup"),cex=.5,label="none")
View(hobbies)
plot(res.mca,invisible=c("ind","quali.sup"),hab="quali")
plot(res.mca,invisible=c("ind","var"),hab="quali")
names(hobbies)[19:22]
plot(res.mca,invisible=c("ind"),hab="quali")
plot(res.mca,invisible=c("ind","var"),hab="quali")
dimdesc(res.mca)
?dimdesc
plotellipses(res.mca,keepvar=1:4)
data("poison")
View(poison)
plot(res.mca,invisible=c("ind"),hab="quali")
plot(res.mca,invisible=c("ind", "quali.sup"),hab="quali")
data(wines)
data(wine)
View(wine)
View(tea)
names(tea)[19]
tea_ <- tea[-19]
res.mca <- MCA(tea_,quali.sup=20:36)
res.mca <- MCA(tea_,quali.sup=19:35)
?MCA
res.mca <- MCA(tea_,quali.sup=19:35, graph = F)
plot(res.mca,invisible=c("var","quali.sup"),cex=0.7)
plot(res.mca,invisible=c("ind","quali.sup"),cex=0.8)
plot(res.mca,invisible=c("ind"),cex=0.8)
plot(res.mca,invisible=c("quali.sup","quanti.sup"),cex=0.8, xlim = c(-2,2))
plot(res.mca,invisible=c("ind"),cex=0.8, xlim = c(-2,2))
?plot.MCA
plot(res.mca,invisible=c("ind"),cex=0.8, habillage = "quali")
plot(res.mca,invisible=c("ind", "quali.sup"),cex=0.8, habillage = "quali")
data(children)
res.ca <- CA (children, row.sup = 15:18, col.sup = 6:8)
summary(res.ca)
ellipseCA(res.ca)
ellipseCA(res.ca,ellipse="col",col.col.ell=c(rep("blue",2),rep("transparent",3)),
invisible=c("row.sup","col.sup"))
View(children)
res.ca <- CA (children, row.sup = 15:18, col.sup = 6:8)
library(MASS)
data("Boston")
boston <- scale(boston)
boston <- scale(Boston)
d <- dist(boston)
d <- dist(boston)
km <-kmeans(di, centers = 3)
boston <- scale(Boston)
d <- dist(boston)
km <-kmeans(d, centers = 3)
lda.fit <- lda(km$cluster~., data = boston)
km <-kmeans(d, centers = 3)
lda.fit <- lda(km$cluster~., data = boston)
lda.fit <- lda(km$cluster~., data = as.matrix(boston))
str(boston)
lda.fit <- lda(km$cluster~., data = data.frame(boston))
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit)
lda.arrows(lda.fit)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit)
lda.arrows(lda.fit, myscale = 3)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(Boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 2)
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 1)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 1)
# helper func
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# access MASS
library(MASS)
# access data
data("Boston")
# scale
boston <- scale(Boston)
# distance matrx
d <- dist(boston)
# k-means clustering
km <-kmeans(d, centers = 3)
# lda
lda.fit <- lda(km$cluster~., data = data.frame(boston))
plot(lda.fit, col = km$cluster)
lda.arrows(lda.fit, myscale = 4)
substr(abc, 3, 5)
abc <- "abcdefg"
substr(abc, 3, 5)
gsub("cde", "123", abc)
today <- Sys.Date()
today
?substr
today <- Sys.Date()
today
substr(today, 1, 4)
gsub("-*-", "feb", today)
gsub("-*+-", "feb", today)
gsub("-*.-", "feb", today)
gsub("-*-.", "feb", today)
gsub(".*-*|-", "feb", today)
gsub(".*-*|-.*", "feb", today)
gsub(".*-\\s*|-.*", "feb", today)
gsub(".*-.*-", "feb", today)
gsub(".*-*-", "feb", today)
today
gsub("-.*-", "feb", today)
gsub("-.*-", "-feb-", today)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
human_std <- scale(human)
pca_human <- prcomp(human_std)
biplot(pca_human, cex = c(0.6, 1))
biplot(pca_human, cex = c(0.6, 1), col = c("grey50", "maroon4"))
biplot(pca_human, cex = c(0.6, 1), col = c("grey50", "hotpink"))
biplot(pca_human, cex = c(0.6, 1), col = c("grey50", "hotpink"))
biplot(pca_human, cex = c(0.6, 1), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 1), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.9), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.9), col = c("grey60", "hotpink"))
op <- par()
par(mar = c(2,2,2,2))
biplot(pca_human, cex = c(0.5, 0.9), col = c("grey60", "hotpink"))
par(op)
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.22, 0.22), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.22, 0.22), col = c("grey60", "hotpink"))
?biplot
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-1, 1), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.21, 0.21), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.21, 0.21), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.2, 0.21), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.2, 0.21), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.2, 0.22), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), xlim = c(-0.2, 0.22), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.9), col = c("grey60", "hotpink"))
ggbiplot(pca_human)
source("https://raw.githubusercontent.com/vqv/ggbiplot/master/R/ggbiplot.r")
ggbiplot(pca_human)
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.7), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.7), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.6), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.6, 0.6), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey60", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey50", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey50", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "hotpink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "red"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "red"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "red4"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "red4"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink2"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink2"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink4"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink4"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink2"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink2"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink2"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey20", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey20", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey30", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.7), col = c("grey40", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey40", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey40", "deeppink1"))
biplot(pca_human, cex = c(0.4, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.4, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.5, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("black", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey10", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey10", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"))
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"))
formals(biplot)
b <- biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"))
str(b)
?summary
pca_human
pc_var <- pca_human$sdev^2
pc_varp <- (100 * pc_var / sum(pc_var)) %>% round(2)
library(dplyr)
pc_varp <- (100 * pc_var / sum(pc_var)) %>% round(2)
paste0("PC", 1:8, " (", "replace me!", "%)")
pc_lab <- paste0("PC", 1:8, " (", pc_varp, "%)")
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"), xlab = pc_lab[1], ylab = pc_lab[2])
pc_varp <- (100 * pc_var / sum(pc_var)) %>% round(1)
paste0("PC", 1:8, " (", "replace me!", "%)")
pc_lab <- paste0("PC", 1:8, " (", pc_varp, "%)")
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.6, 0.8), col = c("grey20", "deeppink1"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.6, 0.8))
biplot(pca_human, cex = c(0.6, 0.8))
biplot(pca_human, cex = c(0.5, 0.8))
biplot(pca_human, cex = c(0.5, 0.8))
paste("PC", 1:8, "(", "replace me!", "%)")
paste("PC", 1:8, "(", "replace me!", "% )")
paste0("PC", 1:8, " (", "replace me!", "%)")
paste0("PC", 1:8, " (", 00, "%)")
paste0("PC", 1:8, " (", 0, "%)")
summary(pca_human)
s <- summary(pca_human)
str(s)
s$importance
s$importance["Proportion of Variance"]
s$importance["Proportion of Variance",]
s$importance[2,]
s[2,]
s$importance[2,]
summary(pca_human)$importance[2,]
s <- summary(pca_human)
s
pc_varp <- s$importance[2,]
pc_varp
s
pc_varp <- s$Importance[2,]
pc_varp
pc_varp <- s$importance[2,]
pc_varp
pc_varp <- (100*s$importance[2,]) %>% round(1)
pc_varp
summary(pca_human)
str(pca_human)
summary(pca_human)
pca_pr <- (1*s$importance[2,]) %>% round(digits = 0)
pca_pr
pca_pr <- (1*s$importance[2,]) %>% round(digits = 5)
pca_pr
s
s$importance[2, ]
biplot(pca_human, cex = c(0.5, 0.8))
biplot(pca_human, cex = c(0.5, 0.8), col = c("grey30", "deeppink4"))
biplot(pca_human, cex = c(0.5, 0.8), col = c("grey40", "deeppink3"))
biplot(pca_human, cex = c(0.5, 0.8), col = c("grey40", "deeppink2"))
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
setwd("C:/Users/Tuomo/Dropbox/GitHub/Helsinki-Open-Data-Science/datasets")
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Matern.Mort",
"Adolesc.Birth", "Parlia.F", "Edu2.F", "Edu2.M",
"Labour.F", "Labour.M")
gi <- mutate(gi, Edu2.FM = Edu2.F / Edu2.M, Labour.FM = Labour.F / Labour.M)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Matern.Mort",
"Young.Birth", "Parlia.F", "Edu2.F", "Edu2.M",
"Labour.F", "Labour.M")
gi <- mutate(gi, Edu2.FM = Edu2.F / Edu2.M, Labour.FM = Labour.F / Labour.M)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Exp", "Life.Exp", "GNI", "Matern.Mort", "Young.Birth", "Parlia.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n_until <- nrow(human) - 7
human <- human[1:n_until, ]
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Matern.Mort",
"Young.Birth", "Parliam.F", "Edu2.F", "Edu2.M",
"Labour.F", "Labour.M")
gi <- mutate(gi, Edu2.FM = Edu2.F / Edu2.M, Labour.FM = Labour.F / Labour.M)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Exp", "Life.Exp", "GNI", "Matern.Mort", "Young.Birth", "Parliam.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n_until <- nrow(human) - 7
human <- human[1:n_until, ]
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
head(test)
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Mat.Mort",
"Young.Birth", "Parliam.F", "Edu2.F", "Edu2.M",
"Labour.F", "Labour.M")
gi <- mutate(gi, Edu2.FM = Edu2.F / Edu2.M, Labour.FM = Labour.F / Labour.M)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
library(dplyr)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labour.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mort", "Young.Birth", "Parliam.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n_until <- nrow(human) - 7
human <- human[1:n_until, ]
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
head(test)
library(dplyr)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
human$GNI <- gsub(",", "", human$GNI) %>% as.numeric
str(human)
keep <- c("Country", "Edu2.FM", "Labour.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mort", "Young.Birth", "Parliam.F")
human <- select(human, one_of(keep))
complete.cases(human)
data.frame(human, complete = "change me!")
data.frame(human , complete = complete.cases(human))
data.frame(human , complete = complete.cases(human))
data.frame(human[-1] , complete = complete.cases(human))
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi)
hd <- read.csv("human_development.csv", stringsAsFactors = F)
gi <- read.csv("gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd) <- c("HDI.Rank", "Country", "HDI", "Life.Exp", "Edu.Exp", "Edu.Mean", "GNI", "GNI.Minus.Rank")
names(gi) <- c("GII.Rank", "Country", "GII", "Mat.Mor",
"Ado.Birth", "Parli.F", "Edu2.F", "Edu2.M",
"Labo.F", "Labo.M")
gi <- mutate(gi, Edu2.FM = Edu2.F / Edu2.M, Labo.FM = Labo.F / Labo.M)
human1 <- inner_join(hd, gi, by = "Country")
write.table(file = "human1.txt", human1, sep =",", row.names = F)
human <- read.table("human1.txt", sep  =",", header = T)
human$GNI <- gsub(",","",human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- dplyr::select(human, one_of(keep))
human <- filter(human, complete.cases(human))
rownames(human) <- human$Country
n_until <- nrow(human) - 7
human <- human[1:n_until, ]
human <- dplyr::select(human, -Country)
write.table(file = "human2.txt", human, sep = ",", row.names = T)
test <- read.table("human2.txt", sep = ",", header = T)
str(test)
head(test)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
names(human)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
human$GNI <- gsub(",", "", human$GNI) %>% as.numeric
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
complete.cases(human)
data.frame(human , complete = complete.cases(human))
data.frame(human , complete = complete.cases(human))
data.frame(human[-1] , complete = complete.cases(human))
data.frame(human[-1] , complete = complete.cases(human))
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
names(human)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
names(human)
